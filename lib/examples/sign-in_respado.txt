import 'package:cocada/services/auth.dart';
import 'package:cocada/shared/widgets/constants.dart';
import 'package:cocada/shared/widgets/loading.dart';
import 'package:flutter/material.dart';


class SignIn extends StatefulWidget {
  final Function changePage;
  SignIn({this.changePage});


  @override
  _SignInState createState() => _SignInState();
}

class _SignInState extends State<SignIn> {

  final AuthService _auth = AuthService();
  final _formKey = GlobalKey<FormState>(); 
  bool loading = false;

  // text field state 

  String  email = ""; 
  String password = ""; 
  String error = ""; 


  @override
  Widget build(BuildContext context) {
    return loading ? Loading() : Scaffold(
      backgroundColor: Colors.brown[200],
      // appBar: AppBar(
      //   backgroundColor: Colors.red,
      //   title: Text("sign- in"),
      //   actions: <Widget>[
      //     FlatButton.icon(onPressed: () { 
      //                         widget.changePage(0); 

      //     }, icon: Icon(Icons.person), label: Text("Register"))

      //   ],
      // ),
      body: Container(
        decoration: BoxDecoration(gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          stops: [0.7,1],
          colors: [new Color.fromRGBO(255,255,255,0.2),new Color.fromRGBO(255,255,255,0.8)])),
        padding: EdgeInsets.symmetric(vertical:20,horizontal:50),
        // child: AnomText(auth: _auth),
        child: Form (
          key: _formKey,

          
          child: Column(
            children: <Widget>[
              SizedBox(height: 20),
              TextFormField (
                decoration: textInputDecoration.copyWith(hintText: "email"),

              validator: (val)=> val.isEmpty ? 'Enter an email' : null,

                onChanged: (val) {
                  setState(() {
                    email = val;
                  });

                } ,
              ),
              SizedBox(height: 20),
              TextFormField (
                decoration: textInputDecoration.copyWith(hintText: "password"),

                validator: (val)=> val.length < 6 ? 'Enter a password 6+ chars long' : null,

                obscureText: true,
                onChanged: (val) {
                  setState(() {
                    password = val;
                  });

                }
              ), 
              SizedBox(height: 20),
              RaisedButton (
                color: Colors.pink,
                child: Text("Sign in"),
                onPressed: () async {
                  if(_formKey.currentState.validate()){
                    setState(() => loading = true);

                    print("VALID");
                    dynamic result = await _auth.signinWIthEmailAndPassword(email, password); 
                    if(result == null){
                      setState(() {
                        error = 'Could not sign in with those credentials';
                        loading = false;

                      });
                    }
                    else{
                       setState(() {
                        error = 'Si se pudo';
                      });

                    }
                  }

                  
                },
                
                ),
                SizedBox(height: 12), 
                Text(error),
       


            ],
          ),
        )
        
      ),
    );
  }
}

class AnomText extends StatelessWidget {
  const AnomText({
    Key key,
    @required AuthService auth,
  }) : _auth = auth, super(key: key);

  final AuthService _auth;

  @override
  Widget build(BuildContext context) {
    return RaisedButton(
      child: Text('Sign in anom'),
      onPressed: () async {
        dynamic result = await _auth.signInAnom(); 
        if(result == null){
          print ("error sign-in");
        }else{
          print ("signed in"); 
          print (result.uid);
        }

      },

    );
  }
}